@model Identity.Models.TaskItem
@{
    ViewData["Title"] = "Delete Task";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - @Model.Title</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body { 
            min-height: 100vh;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .delete-container {
            padding: 40px 20px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .delete-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            padding: 40px;
            margin: 20px auto;
            max-width: 700px;
            width: 100%;
            position: relative;
            overflow: hidden;
            border: 2px solid rgba(220, 53, 69, 0.1);
        }

            .delete-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            }

        .delete-header {
            text-align: center;
            margin-bottom: 32px;
            padding-bottom: 24px;
            border-bottom: 2px solid rgba(220, 53, 69, 0.1);
        }

        .delete-icon {
            font-size: 64px;
            color: #dc3545;
            margin-bottom: 16px;
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }

        .delete-title {
            color: #dc3545;
            font-weight: 700;
            font-size: 32px;
            margin-bottom: 12px;
        }

        .delete-subtitle {
            color: #6c757d;
            font-size: 16px;
            margin: 0;
        }

        .warning-message {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            border: 2px solid #ffc107;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 24px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .warning-message::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #ffc107, #fd7e14, #ffc107);
                animation: shimmer 2s infinite;
            }

        @@keyframes shimmer {
            0%

        {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }

        }

        .warning-icon {
            font-size: 24px;
            color: #856404;
            margin-right: 12px;
        }

        .warning-text {
            color: #856404;
            font-weight: 600;
            font-size: 16px;
            margin: 0;
        }

        .task-name {
            color: #dc3545;
            font-weight: 700;
            font-size: 18px;
            background: linear-gradient(135deg, #ffe6e6 0%, #ffcccc 100%);
            padding: 8px 16px;
            border-radius: 8px;
            display: inline-block;
            margin: 8px 0;
        }

        .task-details {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 24px;
            margin: 24px 0;
        }

        .detail-row {
            display: flex;
            margin-bottom: 16px;
            padding-bottom: 16px;
            border-bottom: 1px solid #dee2e6;
            align-items: flex-start;
        }

            .detail-row:last-child {
                margin-bottom: 0;
                padding-bottom: 0;
                border-bottom: none;
            }

        .detail-label {
            font-weight: 600;
            color: #495057;
            min-width: 140px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .detail-value {
            color: #6c757d;
            flex: 1;
            font-size: 15px;
        }

        .consequences-section {
            background: linear-gradient(135deg, #f8d7da 0%, #f1c2c7 100%);
            border: 1px solid #dc3545;
            border-radius: 12px;
            padding: 20px;
            margin: 24px 0;
        }

        .consequences-title {
            color: #721c24;
            font-weight: 700;
            font-size: 16px;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .consequences-list {
            color: #721c24;
            margin: 0;
            padding-left: 20px;
        }

            .consequences-list li {
                margin-bottom: 8px;
            }

        .action-buttons {
            display: flex;
            gap: 16px;
            justify-content: center;
            margin-top: 32px;
        }

        .btn-delete {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            border: none;
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(220, 53, 69, 0.3);
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .btn-delete::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                transition: left 0.5s;
            }

            .btn-delete:hover::before {
                left: 100%;
            }

            .btn-delete:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 24px rgba(220, 53, 69, 0.4);
                color: white;
            }

        .btn-cancel {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            border: none;
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(108, 117, 125, 0.3);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

            .btn-cancel:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 24px rgba(108, 117, 125, 0.4);
                color: white;
                text-decoration: none;
            }

        /* Priority and Status badges */
        .badge-priority-low {
            background-color: #28a745;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-priority-medium {
            background-color: #ffc107;
            color: #000;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-priority-high {
            background-color: #fd7e14;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-priority-critical {
            background-color: #dc3545;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-status-todo {
            background-color: #6c757d;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-status-inprogress {
            background-color: #007bff;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-status-testing {
            background-color: #17a2b8;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .badge-status-done {
            background-color: #28a745;
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .slide-in {
            animation: slideIn 0.5s ease-out;
        }

        @@keyframes slideIn {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        /* Loading state */
        .btn.loading {
            pointer-events: none;
            opacity: 0.7;
        }

            .btn.loading .btn-text {
                opacity: 0;
            }

            .btn.loading::after {
                content: '';
                position: absolute;
                width: 20px;
                height: 20px;
                border: 2px solid transparent;
                border-top-color: currentColor;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
            }

        @@keyframes spin {
            to

        {
            transform: translate(-50%, -50%) rotate(360deg);
        }

        }

        .description-text {
            background: white;
            padding: 12px;
            border-radius: 8px;
            border-left: 4px solid #17a2b8;
            font-style: italic;
            color: #495057;
        }

        /* Tags display */
        .task-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 8px;
        }

        .tag-badge {
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            color: white;
        }

        /* Responsive */
        @@media (max-width: 576px) {
            .delete-card

        {
            margin: 10px;
            padding: 24px;
            border-radius: 12px;
        }

        .delete-title {
            font-size: 28px;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn-delete,
        .btn-cancel {
            width: 100%;
        }

        .detail-row {
            flex-direction: column;
            gap: 8px;
        }

        .detail-label {
            min-width: auto;
        }

        }
    </style>
</head>
<body>
    <div class="delete-container">
        <div class="delete-card slide-in">
            <div class="delete-header">
                <div class="delete-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h2 class="delete-title">Delete Task</h2>
                <p class="delete-subtitle">This action cannot be undone</p>
            </div>

            <div class="warning-message">
                <i class="fas fa-exclamation-triangle warning-icon"></i>
                <p class="warning-text">
                    Are you sure you want to delete the task
                    <span class="task-name">@Model.Title</span>?
                </p>
            </div>

            <div class="consequences-section">
                <div class="consequences-title">
                    <i class="fas fa-exclamation-circle"></i>
                    What will happen when you delete this task:
                </div>
                <ul class="consequences-list">
                    <li>All time entries associated with this task will be lost</li>
                    <li>Task history and comments will be permanently deleted</li>
                    <li>This action cannot be reversed or undone</li>
                    <li>Related project statistics will be updated</li>
                </ul>
            </div>

            <div class="task-details">
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="detail-row">
                        <div class="detail-label">
                            <i class="fas fa-align-left"></i>
                            Description:
                        </div>
                        <div class="detail-value">
                            <div class="description-text">@Model.Description</div>
                        </div>
                    </div>
                }

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-folder-open"></i>
                        Project:
                    </div>
                    <div class="detail-value">
                        @(Model.Project?.Name ?? "No Project")
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-user"></i>
                        Assigned To:
                    </div>
                    <div class="detail-value">
                        @if (Model.AssignedUser != null)
                        {
                            <span>@(Model.AssignedUser.UserName ?? Model.AssignedUser.Email)</span>
                        }
                        else
                        {
                            <span class="text-muted">Unassigned</span>
                        }
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-flag"></i>
                        Priority:
                    </div>
                    <div class="detail-value">
                        <span class="badge-priority-@Model.Priority.ToString().ToLower()">
                            @Model.Priority
                        </span>
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-tasks"></i>
                        Status:
                    </div>
                    <div class="detail-value">
                        <span class="badge-status-@Model.Status.ToString().ToLower()">
                            @Model.Status
                        </span>
                    </div>
                </div>

                @if (Model.EstimatedHours.HasValue)
                {
                    <div class="detail-row">
                        <div class="detail-label">
                            <i class="fas fa-clock"></i>
                            Estimated Hours:
                        </div>
                        <div class="detail-value">@Model.EstimatedHours.Value.ToString("F2") hours</div>
                    </div>
                }

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-calendar-plus"></i>
                        Created Date:
                    </div>
                    <div class="detail-value">@Model.CreatedDate.ToString("MMMM dd, yyyy 'at' HH:mm")</div>
                </div>

                @if (Model.TaskTags != null && Model.TaskTags.Any())
                {
                    <div class="detail-row">
                        <div class="detail-label">
                            <i class="fas fa-tags"></i>
                            Tags:
                        </div>
                        <div class="detail-value">
                            <div class="task-tags">
                                @foreach (var taskTag in Model.TaskTags)
                                {
                                    <span class="tag-badge" style="background-color: @taskTag.Tag.ColorCode">
                                        @taskTag.Tag.Name
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <form asp-action="Delete" method="post" id="deleteForm">
                <input type="hidden" asp-for="Id" />
                <div class="action-buttons">
                    <button type="button" class="btn-delete" onclick="confirmDelete()">
                        <span class="btn-text">
                            <i class="fas fa-trash-alt"></i>
                            Yes, Delete Task
                        </span>
                    </button>
                    <a asp-action="Index" class="btn-cancel">
                        <i class="fas fa-times"></i>
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        function confirmDelete() {
            const taskName = '@Html.Raw(Model.Title.Replace("'", "\\'"))';

            // Show final confirmation
            if (confirm(`Are you absolutely sure you want to delete "${taskName}"?\n\nThis action cannot be undone!`)) {
                // Add loading state
                const deleteBtn = document.querySelector('.btn-delete');
                deleteBtn.classList.add('loading');
                deleteBtn.disabled = true;

                // Submit the form
                document.getElementById('deleteForm').submit();
            }
        }

        // Add entrance animation
        document.addEventListener('DOMContentLoaded', function() {
            const card = document.querySelector('.delete-card');
            card.style.transform = 'translateY(20px)';
            card.style.opacity = '0';

            setTimeout(() => {
                card.style.transition = 'all 0.5s ease-out';
                card.style.transform = 'translateY(0)';
                card.style.opacity = '1';
            }, 100);
        });
    </script>
</body>
</html>