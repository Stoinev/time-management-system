@model Identity.Models.Tag
@{
    ViewData["Title"] = "Delete Tag";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - @Model.Name</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .delete-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
            padding: 32px;
            margin: 20px auto;
            max-width: 600px;
            border: 2px solid rgba(220, 53, 69, 0.1);
        }

        .delete-header {
            text-align: center;
            margin-bottom: 32px;
            padding-bottom: 24px;
            border-bottom: 2px solid rgba(220, 53, 69, 0.1);
        }

        .delete-icon {
            font-size: 64px;
            color: #dc3545;
            margin-bottom: 16px;
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }

        .delete-title {
            color: #dc3545;
            font-weight: 700;
            font-size: 28px;
            margin-bottom: 12px;
        }

        .warning-message {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            border: 2px solid #ffc107;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 24px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .warning-message::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #ffc107, #fd7e14, #ffc107);
                animation: shimmer 2s infinite;
            }

        @@keyframes shimmer {
            0%

        {
            transform: translateX(-100%);
        }

        100% {
            transform: translateX(100%);
        }

        }

        .warning-icon {
            font-size: 24px;
            color: #856404;
            margin-right: 12px;
        }

        .warning-text {
            color: #856404;
            font-weight: 600;
            font-size: 16px;
            margin: 0;
        }

        .tag-display {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 12px 20px;
            border-radius: 20px;
            font-weight: 700;
            font-size: 18px;
            margin: 12px 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            position: relative;
            overflow: hidden;
        }

            .tag-display::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
                animation: tagShimmer 3s infinite;
            }

        @@keyframes tagShimmer {
            0%

        {
            left: -100%;
        }

        100% {
            left: 100%;
        }

        }

        .tag-details {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 24px;
            margin: 24px 0;
        }

        .detail-row {
            display: flex;
            margin-bottom: 16px;
            padding-bottom: 16px;
            border-bottom: 1px solid #dee2e6;
        }

            .detail-row:last-child {
                margin-bottom: 0;
                padding-bottom: 0;
                border-bottom: none;
            }

        .detail-label {
            font-weight: 600;
            color: #495057;
            min-width: 120px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .detail-value {
            color: #6c757d;
            flex: 1;
            font-size: 15px;
            display: flex;
            align-items: center;
        }

        .color-preview {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            border: 2px solid #dee2e6;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .usage-warning {
            background: linear-gradient(135deg, #f8d7da 0%, #f1c2c7 100%);
            border: 2px solid #dc3545;
            border-radius: 12px;
            padding: 20px;
            margin: 24px 0;
        }

        .usage-title {
            color: #721c24;
            font-weight: 700;
            font-size: 16px;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .usage-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 16px;
            margin-top: 16px;
        }

        .stat-card {
            background: white;
            border-radius: 8px;
            padding: 16px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .stat-number {
            font-size: 24px;
            font-weight: 700;
            color: #dc3545;
            margin-bottom: 4px;
        }

        .stat-label {
            font-size: 12px;
            color: #721c24;
            font-weight: 600;
        }

        .consequences-section {
            background: linear-gradient(135deg, #ffe6e6 0%, #ffcccc 100%);
            border: 1px solid #dc3545;
            border-radius: 12px;
            padding: 20px;
            margin: 24px 0;
        }

        .consequences-title {
            color: #721c24;
            font-weight: 700;
            font-size: 16px;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .consequences-list {
            color: #721c24;
            margin: 0;
            padding-left: 20px;
        }

            .consequences-list li {
                margin-bottom: 8px;
            }

        .action-buttons {
            display: flex;
            gap: 16px;
            justify-content: center;
            margin-top: 32px;
        }

        .btn-delete {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            border: none;
            color: white;
            padding: 14px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(220, 53, 69, 0.3);
            position: relative;
            overflow: hidden;
        }

            .btn-delete::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                transition: left 0.5s;
            }

            .btn-delete:hover::before {
                left: 100%;
            }

            .btn-delete:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(220, 53, 69, 0.4);
                color: white;
            }

        .btn-cancel {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            border: none;
            color: white;
            padding: 14px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(108, 117, 125, 0.3);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

            .btn-cancel:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(108, 117, 125, 0.4);
                color: white;
                text-decoration: none;
            }

        .slide-in {
            animation: slideIn 0.5s ease-out;
        }

        @@keyframes slideIn {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .loading {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: #6c757d;
            font-style: italic;
        }

            .loading i {
                animation: spin 1s linear infinite;
            }

        @@keyframes spin {
            from

        {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }

        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="delete-card slide-in">
            <div class="delete-header">
                <div class="delete-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h2 class="delete-title">Delete Tag</h2>
                <p class="text-muted">This action cannot be undone</p>
            </div>

            <div class="warning-message">
                <i class="fas fa-exclamation-triangle warning-icon"></i>
                <p class="warning-text">
                    Are you sure you want to delete the tag
                    <span class="tag-display" id="tagDisplay" style="background-color: @Model.ColorCode">
                        <i class="fas fa-tag"></i>
                        @Model.Name
                    </span>
                    ?
                </p>
            </div>

            <div class="usage-warning" id="usageWarning">
                <div class="usage-title">
                    <i class="fas fa-exclamation-circle"></i>
                    Tag Usage Impact
                </div>
                <div class="usage-stats" id="usageStats">
                    <div class="stat-card">
                        <div class="loading">
                            <i class="fas fa-spinner"></i>
                            Loading...
                        </div>
                    </div>
                </div>
            </div>

            <div class="consequences-section">
                <div class="consequences-title">
                    <i class="fas fa-exclamation-circle"></i>
                    What will happen when you delete this tag:
                </div>
                <ul class="consequences-list">
                    <li>The tag will be removed from all associated tasks</li>
                    <li>Task categorization using this tag will be lost</li>
                    <li>This action is permanent and cannot be reversed</li>
                    <li>Reports and statistics using this tag will be affected</li>
                </ul>
            </div>

            <div class="tag-details">
                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-signature"></i>
                        Name:
                    </div>
                    <div class="detail-value">@Model.Name</div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-palette"></i>
                        Color:
                    </div>
                    <div class="detail-value">
                        <div class="color-preview" style="background-color: @Model.ColorCode"></div>
                        <span class="ms-3">@Model.ColorCode</span>
                    </div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-calendar"></i>
                        Created Date:
                    </div>
                    <div class="detail-value">@Model.CreatedDate.ToString("MMMM dd, yyyy 'at' HH:mm")</div>
                </div>

                <div class="detail-row">
                    <div class="detail-label">
                        <i class="fas fa-hashtag"></i>
                        Tag ID:
                    </div>
                    <div class="detail-value">#@Model.Id</div>
                </div>
            </div>

            <form asp-action="Delete" method="post" id="deleteForm">
                <input type="hidden" asp-for="Id" />
                <div class="action-buttons">
                    <button type="button" class="btn-delete" onclick="confirmDelete()">
                        <i class="fas fa-trash-alt me-2"></i>
                        Yes, Delete Tag
                    </button>
                    <a asp-action="Index" class="btn-cancel">
                        <i class="fas fa-times me-2"></i>
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        function confirmDelete() {
            const tagName = '@Html.Raw(Model.Name.Replace("'", "\\'"))';

            // Show final confirmation
            if (confirm(`Are you absolutely sure you want to delete "${tagName}"?\n\nThis action cannot be undone!`)) {
                // Add loading state
                const deleteBtn = document.querySelector('.btn-delete');
                const originalText = deleteBtn.innerHTML;
                deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';
                deleteBtn.disabled = true;

                // Submit the form
                document.getElementById('deleteForm').submit();
            }
        }

        // Calculate text color based on background brightness
        function getTextColor(backgroundColor) {
            const rgb = parseInt(backgroundColor.slice(1), 16);
            const r = (rgb >> 16) & 0xff;
            const g = (rgb >> 8) & 0xff;
            const b = rgb & 0xff;
            const brightness = (r * 299 + g * 587 + b * 114) / 1000;
            return brightness > 128 ? '#000000' : '#FFFFFF';
        }

        // Load usage statistics
        function loadUsageStats() {
            // Simulate API call - replace with actual endpoint
            setTimeout(() => {
                const taskCount = @(ViewBag.TaskCount ?? 0);
                const projectCount = Math.floor(Math.random() * 10);
                const userCount = Math.floor(Math.random() * 25);

                const statsContainer = document.getElementById('usageStats');

                if (taskCount === 0 && projectCount === 0) {
                    statsContainer.innerHTML = `
                        <div class="stat-card" style="grid-column: 1 / -1;">
                            <div style="color: #28a745; font-size: 18px; margin-bottom: 8px;">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div style="color: #28a745; font-weight: 600;">Safe to Delete</div>
                            <div style="font-size: 12px; color: #6c757d; margin-top: 4px;">
                                This tag is not currently being used
                            </div>
                        </div>
                    `;
                } else {
                    statsContainer.innerHTML = `
                        <div class="stat-card">
                            <div class="stat-number">${taskCount}</div>
                            <div class="stat-label">Tasks</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${projectCount}</div>
                            <div class="stat-label">Projects</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">${userCount}</div>
                            <div class="stat-label">Users</div>
                        </div>
                    `;
                }
            }, 800);
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Set correct text color for tag display
            const tagDisplay = document.getElementById('tagDisplay');
            const backgroundColor = '@Model.ColorCode';
            tagDisplay.style.color = getTextColor(backgroundColor);

            // Load usage statistics
            loadUsageStats();

            // Add entrance animation
            const card = document.querySelector('.delete-card');
            card.style.transform = 'translateY(20px)';
            card.style.opacity = '0';

            setTimeout(() => {
                card.style.transition = 'all 0.5s ease-out';
                card.style.transform = 'translateY(0)';
                card.style.opacity = '1';
            }, 100);
        });
    </script>
</body>
</html>